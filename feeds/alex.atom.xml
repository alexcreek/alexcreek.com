<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stuff I Wanna Remember</title><link href="alexcreek.com/" rel="alternate"></link><link href="alexcreek.com/feeds/alex.atom.xml" rel="self"></link><id>alexcreek.com/</id><updated>2054-04-01T00:00:00-05:00</updated><entry><title>Apache SSL Configuration Snippets</title><link href="alexcreek.com/apache-ssl-configuration-snippets.html" rel="alternate"></link><updated>2054-04-01T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2054-04-01:alexcreek.com/apache-ssl-configuration-snippets.html</id><summary type="html">&lt;h2&gt;Certificates, Protocols and Options&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SSLEngine on
SSLCertificateFile /etc/apache2/ssl/cert.pem
SSLCertificateKeyFile /etc/apache2/ssl/cert.pem
SSLCACertificateFile /etc/apache2/ssl/ca-certs.pem
SSLProtocol all -SSLv2 -SSLv3
SSLHonorCipherOrder on          # Ciphers specified by the server take precedence
# Optional, defaults to off
SSLInsecureRenegotiation off    # Mitigates CVE-2009-3555
SSLCompression off              # Mitigates CRIME and BEAST attacks (Apache 2.4 only)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Cipher Suites&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations"&gt;Mozilla TLS Recommendations&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Modern&lt;/h3&gt;
&lt;p&gt;This meets Perfect Forward Secrecy standards&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK

or

SSLCipherSuite AES256+EECDH:AES256+EDH
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Compatible&lt;/h3&gt;
&lt;p&gt;This will achieve a Cipher Strength of 90 from Qualys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

or

SSLCipherSuite HIGH:!MD5:!RC4:!aNULL:!eNULL:!EXP
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Legacy&lt;/h3&gt;
&lt;p&gt;Avoid using where possible&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;HSTS&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Header set Strict-Transport-Security &amp;quot;max-age=31536000; includeSubDomains&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;OCSP Stapling&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SSLStaplingCache shmcb:/tmp/stapling_cache(128000) # place outside &lt;span class="nt"&gt;&amp;lt;virtualhost&amp;gt;&amp;lt;/virtualhost&amp;gt;&lt;/span&gt;
SSLCACertificateFile /etc/apache2/ssl/ca-certs.pem
SSLUseStapling on
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;So what's all this mean?&lt;/h2&gt;
&lt;p&gt;SSL is bad, disable it and use TLS exclusivly ( see wikipedia's listing of &lt;a href="https://en.wikipedia.org/wiki/Transport_Layer_Security#Security"&gt;SSL vulnerabilities&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;We want the server, not the client, to mandate the order in which SSL ciphers will be used &lt;/p&gt;
&lt;p&gt;HTTP Strict-Transport-Security (&lt;a href="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security"&gt;HSTS&lt;/a&gt;) is a policy that explicity tells web clients to use the HTTPS version of a resource.  When a webserver redirects a non-HTTP request to an HTTPS version of the same site, HSTS mandates that the webserver includes a &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header telling the client to use the secure site.  &lt;/p&gt;
&lt;p&gt;Disabling SSL compression mitigates the &lt;a href="https://en.wikipedia.org/wiki/CRIME"&gt;CRIME&lt;/a&gt; and &lt;a href="http://breachattack.com/"&gt;BREACH&lt;/a&gt; attacks.  The &lt;code&gt;SSLCompression&lt;/code&gt; directive is available in apache &amp;gt;= 2.4.3.  The default setting is off.  &lt;/p&gt;
&lt;p&gt;Disabling insecure renegotiation mitigates &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555"&gt;CVE-2009-3555&lt;/a&gt;.  The &lt;code&gt;SSLInsecureRenegotiation&lt;/code&gt; directive is available in apache &amp;gt;= 2.2.15.  The default setting is off.  &lt;/p&gt;
&lt;p&gt;OCSP staping is cool because it lets the webserver verify the certificate revokation status (OCSP/CRL) and relay that information to the client.  This alleviates each client from contacting the OSCP server.  Sweet. &lt;/p&gt;
&lt;p&gt;There's a ton of ciphers to choose from when configuring &lt;code&gt;SSLCipherSuite&lt;/code&gt; and it can be overwhelming.  There are aliases that can be used (HIGH, MEDIUM, LOW) but the only one that's acceptable to use anymore is HIGH.  Aliases do work, &lt;code&gt;SSLCipherSuite HIGH:!MD5:!RC4:!aNULL:!eNULL:!EXP&lt;/code&gt; but for the best control (speed vs. security) explicitly defining ciphers  should be used. &lt;/p&gt;
&lt;p&gt;Forward Secrecy ( aka Perfect Forward Secrecy or PFS) is not a setting, but rather it's a standard that's achieved when secure key-exchange ciphers are used.  These secure ciphers are deemed to provide a level of encryption that will prevent future decryption attacks given a reasonable amount of time &lt;/p&gt;
&lt;p&gt;There are alot of &lt;code&gt;SSLCipherSuite&lt;/code&gt; configurations floating around the Internet.  Alot of these are old and may no longer be the recommended configuration.  Mozilla has an extremely comprehensive &lt;a href="https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations"&gt;writeup&lt;/a&gt; of implementing encryption and the ciphers they recommend using, including use cases for each set. &lt;/p&gt;
&lt;h2&gt;So now what?&lt;/h2&gt;
&lt;p&gt;Setup your servers and test your configurations using the &lt;a href="https://www.ssllabs.com/ssltest/analyze.html"&gt;Qualys SSL Analyzer&lt;/a&gt; and &lt;a href="https://sslcheck.globalsign.com/"&gt;GlobalSign's SSL Checker&lt;/a&gt;.  Remember, only you can prevent shitty encryption on your sites.&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.mozilla.org/Security/Server_Side_TLS"&gt;Mozilla Server Side TLS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sslcheck.globalsign.com/"&gt;GlobalSign SSL Checker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssllabs.com/ssltest/"&gt;Qualys SSL Analyzer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html"&gt;Strong SSL on Apache&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy"&gt;Configure Forward Secrecy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/HTTP_Strict_Transport_Security"&gt;Strict Transport Security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx"&gt;Configure OCSP Stapling on Apache and Nginx&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Sending Everything to Syslog</title><link href="alexcreek.com/sending-everything-to-syslog.html" rel="alternate"></link><updated>2016-01-29T23:29:29-05:00</updated><author><name>alex</name></author><id>tag:,2016-01-29:alexcreek.com/sending-everything-to-syslog.html</id><summary type="html">&lt;p&gt;This is a running collection of syslog settings for various applications&lt;/p&gt;
&lt;h2&gt;Apache&lt;/h2&gt;
&lt;p&gt;Apache natively has the ability to send error logs to syslog, but if that method is used then the severity of each message is not uniform and searching is slightly more involved. By piping error logs to &lt;code&gt;logger&lt;/code&gt; each message's severity can be standardized across the board.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LogFormat &amp;quot;[%v] %h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %b \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot;&amp;quot; vhost_combined
ErrorLog  &amp;quot;|/usr/bin/logger -t httpd -p local1.error&amp;quot; 

&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="err"&gt;*:port&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
CustomLog &amp;quot;|/usr/bin/logger -t httpd -p local1.info&amp;quot; vhost_combined
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Searching:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;access logs   program:local1 AND severity:info AND message:vhost name
error logs    program:local1 AND severity:error
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;php-fpm&lt;/h2&gt;
&lt;p&gt;When using php-fpm (on CentOS 7) the &lt;code&gt;syslog.facility&lt;/code&gt; and &lt;code&gt;syslog.ident&lt;/code&gt; settings cannot be set individually per pool.  The desired facility must be set within &lt;code&gt;php-fpm.conf&lt;/code&gt;.  &lt;code&gt;syslog.ident&lt;/code&gt; has no effect on pools, only the main php-fpm process.  Pools are logged as the &lt;code&gt;journal&lt;/code&gt; program and their pool name is included in the syslog message.  &lt;/p&gt;
&lt;p&gt;To enable consolidated searching of errors and access logs, the pool name would have the same name as the Apache virtual host that it's serving. &lt;/p&gt;
&lt;p&gt;in &lt;code&gt;php-fpm.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;error_log = syslog
syslog.facility = local1
syslog.ident = php-fpm
&lt;/pre&gt;&lt;/div&gt;


&lt;!--
 in `php-fpm.d/pool.conf`
 ```
 error_log = syslog
 ```
--&gt;

&lt;h3&gt;Searching:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;error logs    facility:local1 AND message:pool name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;mariadb/mysql&lt;/h2&gt;
&lt;p&gt;in &lt;code&gt;/etc/my.cnf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[mysqld_safe]&lt;/span&gt;
&lt;span class="err"&gt;syslog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Messages will be logged as &lt;code&gt;mysqld&lt;/code&gt; and &lt;code&gt;mysqld_safe&lt;/code&gt;&lt;/p&gt;</summary></entry><entry><title>Get proxied client IP with apache</title><link href="alexcreek.com/get-proxied-client-ip-with-apache.html" rel="alternate"></link><updated>2015-02-10T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2015-02-10:alexcreek.com/get-proxied-client-ip-with-apache.html</id><summary type="html">&lt;p&gt;Using &lt;code&gt;mod_remoteip&lt;/code&gt; and modifying apache's log format, real client IP addresses can easily be captured&lt;/p&gt;
&lt;h2&gt;Enable and configure mod_remoteip&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LoadModule remoteip_module modules/mod_remoteip.so
&lt;span class="nt"&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class="err"&gt;mod_remoteip.c&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    RemoteIPHeader          X-Forwarded-For  # YMMV for different load balancers
    RemoteIPInternalProxy   127.0.0.1
&lt;span class="nt"&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Modify log variables&lt;/h2&gt;
&lt;p&gt;Replace the remote hostname variable, &lt;code&gt;%h&lt;/code&gt;,  with the client ip variable provided by &lt;code&gt;mod_remoteip&lt;/code&gt;, &lt;code&gt;%a&lt;/code&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;Old&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LogFormat &amp;quot;%h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %O \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot;&amp;quot; combined
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;New&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LogFormat &amp;quot;%a %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %O \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot;&amp;quot; combined
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/br&gt;
For more logging variables see the docs 
&lt;/br&gt;
&lt;a href="https://httpd.apache.org/docs/current/mod/mod_log_config.html"&gt;Apache Module mod_log_config&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Apache enable SNI</title><link href="alexcreek.com/apache-enable-sni.html" rel="alternate"></link><updated>2015-01-01T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2015-01-01:alexcreek.com/apache-enable-sni.html</id><summary type="html">&lt;h3&gt;Problem:&lt;/h3&gt;
&lt;p&gt;The proper versions of apache and OpenSSL are installed to support SNI but when multiple SSL certificates are configured in apache you get the following errors in the error.log and apache fails to start.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[ssl:emerg] [pid 48715] AH02242: Init: Multiple RSA server certificates not allowed
[ssl:emerg] [pid 48715] AH02312: Fatal error initialising mod_ssl, exiting.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;WTF??&lt;/h2&gt;
&lt;h3&gt;Solution:&lt;/h3&gt;
&lt;p&gt;Add the following to the config, preferably the SSL config e.g. &lt;code&gt;/etc/httpd/conf.d/ssl.conf&lt;/code&gt;, &lt;code&gt;/etc/apache2/mods-enabled/ssl.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;NameVirtualHost *:443
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/br&gt;
Wanna know more?
&lt;/br&gt; &lt;a href="https://wiki.apache.org/httpd/NameBasedSSLVHostsWithSNI"&gt;HTTPD Wiki SNI&lt;/a&gt;
&lt;/br&gt; &lt;a href="http://www.rackspace.com/knowledge_center/article/serving-secure-sites-with-sni-on-apache"&gt;Serving Secure Sites With SNI On Apache&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Oneliners every sysadmin should know</title><link href="alexcreek.com/oneliners-every-sysadmin-should-know.html" rel="alternate"></link><updated>2014-12-24T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-12-24:alexcreek.com/oneliners-every-sysadmin-should-know.html</id><summary type="html">&lt;h2&gt;Apache&lt;/h2&gt;
&lt;h3&gt;Dump virtualhosts&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apachectl -S
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Dump enabled modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apachectl -M
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Show version and current MPM (and compile options)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apachectl -V
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Test config file&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apachectl -t
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;PHP&lt;/h2&gt;
&lt;h2&gt;Test config file&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php -t
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Show phpinfo()&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php -i
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Dump configured modules&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php -m
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Show loaded ini files&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php --ini
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Mysql&lt;/h2&gt;
&lt;h3&gt;Test config file&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysqld --help
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Dump msyql settings&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysql -e &amp;#39;show variables;&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Commands&lt;/h2&gt;
&lt;h3&gt;Remove commented lines&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grep -v &amp;#39;#&amp;#39; blah.conf | egrep -v &amp;#39;^$&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Tarball download and unzip&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget -qO- url.tar.gz | tar -xzf -
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;h3&gt;Show compile time options&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nginx -V 2&amp;gt;&amp;amp;1 | tr &amp;#39; &amp;#39; &amp;#39;\n&amp;#39;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Mysql Cheatsheet</title><link href="alexcreek.com/mysql-cheatsheet.html" rel="alternate"></link><updated>2014-12-15T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-12-15:alexcreek.com/mysql-cheatsheet.html</id><summary type="html">&lt;h2&gt;Secure Operations&lt;/h2&gt;
&lt;h3&gt;Configure securely&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mysql_secure_installation
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Running securely&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mysqld_safe
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Managing Users&lt;/h2&gt;
&lt;h3&gt;List users&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create a user and assign permissions for a database&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GRANT ALL PRIVILEGES ON &amp;lt;database&amp;gt;.* TO &amp;lt;newuser&amp;gt;@&amp;lt;hostname&amp;gt; IDENTIFIED BY &amp;#39;&amp;lt;password&amp;gt;&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Reset a user's password&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SET PASSWORD FOR &amp;#39;&amp;lt;user&amp;gt;&amp;#39;@&amp;#39;&amp;lt;hostname&amp;gt;&amp;#39;=PASSWORD(&amp;#39;&amp;lt;password&amp;gt;&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Update permissions&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FLUSH PRIVILEGES;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Managing databases and tables&lt;/h2&gt;
&lt;h3&gt;List databases&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SHOW databases;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create a database&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;CREATE DATABASE &amp;lt;database&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Select a database to use&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;USE &amp;lt;database&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;List database tables&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SHOW tables;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;List field formats&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DESCRIBE &amp;lt;table&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Display data (record)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SELECT &amp;lt;field&amp;gt; FROM &amp;lt;table&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Delete data&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DELETE FROM &amp;lt;table&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Delete a table&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DROP TABLE &amp;lt;table&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Delete a database&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DROP DATABASE &amp;lt;database&amp;gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Disaster Recovery&lt;/h2&gt;
&lt;h3&gt;Backup a database&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysqldump -u &amp;lt;username&amp;gt; -p &amp;lt;db name&amp;gt; &amp;gt; backup.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Backup multiple databases&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;for i in &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;mysql&lt;/span&gt; &lt;span class="err"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;show databases&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;egrep&lt;/span&gt; &lt;span class="err"&gt;-iv&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(database|schema|mysql)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;; do mysqldump &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="x"&gt; &amp;gt; &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;sql&lt;/span&gt;&lt;span class="x"&gt; ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Restore a database&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysql -u &amp;lt;username&amp;gt; -p &amp;lt;db name&amp;gt; &amp;lt; backup.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Restore multiple databases&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s s-Atom"&gt;for&lt;/span&gt; &lt;span class="s s-Atom"&gt;database&lt;/span&gt; &lt;span class="s s-Atom"&gt;in&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;backups&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;databases/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="s s-Atom"&gt;do&lt;/span&gt; &lt;span class="s s-Atom"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create database ${database:0:-4};&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s s-Atom"&gt;mysql&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${database:0:-4}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$database&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s s-Atom"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Copy a database (target db must exist)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysqldump -u &amp;lt;username&amp;gt; -p &amp;lt;source db&amp;gt; | mysql -u &amp;lt;username&amp;gt; -p &amp;lt;destination db&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Recover Mysql root password and set a new password&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
&lt;span class="n"&gt;mysqld_safe&lt;/span&gt; &lt;span class="c1"&gt;--skip-grant-tables &amp;amp;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;
&lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;newrootpassword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
&lt;span class="n"&gt;mysqld_safe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Query Tips&lt;/h2&gt;
&lt;h3&gt;Working with time and dates&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;DATE_ADD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;INTERVAL&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="k"&gt;day&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;DATE_SUB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;INTERVAL&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="k"&gt;day&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SELCET&lt;/span&gt; &lt;span class="n"&gt;DATEDIFF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;user_accounts&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Enable passive mode FTP</title><link href="alexcreek.com/enable-passive-mode-ftp.html" rel="alternate"></link><updated>2014-12-11T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-12-11:alexcreek.com/enable-passive-mode-ftp.html</id><summary type="html">&lt;p&gt;I've found that getting passive FTP transfers to work has often been the most frustrating part of setting up a server.  Because of that, here are instructions for configuring passive mode for the most popular FTP servers.&lt;/p&gt;
&lt;h2&gt;proFTPD&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/proftpd.conf
PassivePorts 30000 50000
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;vsftpd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/vsftpd/vsftpd.conf
pasv_enable=YES
pasv_min_port=30000
pasv_max_port=50000
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Pure-FTPd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/pure-ftpd/pure-ftpd.conf
PassivePortRange          30000 50000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here are the accompanying iptables rules:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-A INPUT -p tcp -m tcp --dport 20:21 -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m tcp --dport 30000:50000 -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Find wordpress versions</title><link href="alexcreek.com/find-wordpress-versions.html" rel="alternate"></link><updated>2014-12-11T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-12-11:alexcreek.com/find-wordpress-versions.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;find . -iname &amp;#39;version.php&amp;#39; -exec grep &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;wp_version&lt;/span&gt;&lt;span class="x"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;}&amp;#39; \;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Custom Rsyslog filters</title><link href="alexcreek.com/custom-rsyslog-filters.html" rel="alternate"></link><updated>2014-12-08T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-12-08:alexcreek.com/custom-rsyslog-filters.html</id><summary type="html">&lt;p&gt;Rsyslog has the ability to filter messages by pattern matching properties within a message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;compare&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[string]&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So to match all proftpd logs and send them to a specific file, we can search the app-name property for proftpd&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:app-name, isequal, &amp;quot;proftpd&amp;quot;   /var/log/proftpd/proftpd.log
~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That would be placed above the typical catch all rule and the ~ will cause all matched messages to be discarded so they aren't processed again and sent to other logfiles. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:msg, contains, &amp;quot;error&amp;quot;     /var/log/errors.log
:app-name, isequal, &amp;quot;sudo&amp;quot;  /var/log/sudo.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These examples should be fairly obvious.  See the rsyslog documentation for more information about &lt;a href="http://www.rsyslog.com/doc/v7-stable/configuration/properties.html"&gt;properties&lt;/a&gt; and &lt;a href="http://www.rsyslog.com/doc/rsyslog_conf_filter.html"&gt;comparison operators&lt;/a&gt; &lt;/p&gt;</summary></entry><entry><title>Using htpasswd files with cPanel</title><link href="alexcreek.com/using-htpasswd-files-with-cpanel.html" rel="alternate"></link><updated>2014-11-28T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-11-28:alexcreek.com/using-htpasswd-files-with-cpanel.html</id><summary type="html">&lt;p&gt;When specifying the location to an htpasswd file, the path must be relative to the webserver's ServerRoot.  Shared hosting often doesn't provide access to the ServerRoot nor do they tell their account holders what it is.  Well, chances are it's &lt;code&gt;/usr/local/apache/&lt;/code&gt;.  Now that we know that, using an htpasswd file is easy.  &lt;/p&gt;
&lt;p&gt;Say your cPanel Home Directory is /home/123456/.  You would put the .htpasswd file in /home/123456, safely outside of your DocumentRoot, and the .htaccess file would look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AuthType digest
AuthName &amp;quot;Secure Area&amp;quot;
AuthDigestProvider file
AuthUserFile ../../../home/123456/.htaccess
Require valid-user
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Setup an email server with exim courier and spamassassin</title><link href="alexcreek.com/setup-an-email-server-with-exim-courier-and-spamassassin.html" rel="alternate"></link><updated>2014-11-15T00:00:00-05:00</updated><author><name>alex</name></author><id>tag:,2014-11-15:alexcreek.com/setup-an-email-server-with-exim-courier-and-spamassassin.html</id><summary type="html">&lt;p&gt;&lt;/br&gt;
1. &lt;a href="#Install_Exim"&gt;Install exim&lt;/a&gt;&lt;/br&gt;
2. &lt;a href="#Install_Spamassasin"&gt;Install spamassassin&lt;/a&gt;&lt;/br&gt;
3. &lt;a href="#Install_Courier"&gt;Install courier&lt;/a&gt;&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="Install_Exim"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Exim&lt;/h1&gt;
&lt;h3&gt;1) Install exim&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install exim4-daemon-heavy
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2) Configure&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo dpkg-reconfigure exim4-configure
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3) Harden&lt;/h3&gt;
&lt;p&gt;Reduce banner information&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/exim4/exim4.conf.template
    # Add
    smtp_banner = $smtp_active_hostname ESMTP    
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If not required, disable ipv6&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/exim4/exim4.conf.template
    # Add
    disable_ipv6 = true   
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4) Enable and configure TLS communication&lt;/h3&gt;
&lt;p&gt;Generate a csr or self signed keys using &lt;code&gt;openssl&lt;/code&gt; or &lt;code&gt;exim-gencert&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /usr/share/doc/exim4-base/examples/exim-gencert

or

sudo openssl req -x509 -nodes -newkey rsa -keyout exim.pem -out exim.pem -days 730
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enable TLS &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/exim4/exim4.conf.template
    # Add
    tls_on_connect_ports=465    
    MAIN_TLS_ENABLE = yes

    # Uncomment and/or modify
    MAIN_TLS_CERTIFICATE = CONFDIR/exim.crt    
    MAIN_TLS_PRIVATEKEY = CONFDIR/exim.key
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/default/exim4
    # Add
    SMTPLISTENEROPTIONS=&amp;#39;-oX 465:25 -oP /var/run/exim4/exim.pid&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enable SASL authentication and AUTH PLAIN LOGIN&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/exim4/exim4.conf.template
    # Uncomment 
     plain_saslauthd_server:
       driver = plaintext
       public_name = PLAIN
       server_condition = ${if saslauthd{{$auth2}{$auth3}}{1}{0}}
       server_set_id = $auth2
       server_prompts = :
       .ifndef AUTH_SERVER_ALLOW_NOTLS_PASSWORDS
       server_advertise_condition = ${if eq{$tls_in_cipher}{}{}{*}}
       .endif

     login_saslauthd_server:
       driver = plaintext
       public_name = LOGIN
       server_prompts = &amp;quot;Username:: : Password::&amp;quot;
       server_condition = ${if saslauthd{{$auth1}{$auth2}}{1}{0}}
       server_set_id = $auth1
       .ifndef AUTH_SERVER_ALLOW_NOTLS_PASSWORDS
       server_advertise_condition = ${if eq{$tls_in_cipher}{}{}{*}}
       .endif
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5) Restart exim&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service exim4 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="Install_Spamassasin"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Spamassasin&lt;/h1&gt;
&lt;h3&gt;1) Install spamassassin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install spamassassin
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2) Enable&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/default/spamassassin
    # Modify
    ENABLED=1
    CRON=1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3) Enable integration with exim&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/exim4/exim4.conf.template
    # Uncomment
    spamd_address = 127.0.0.1 783
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4) Enable logging&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/rsyslog.d/60-spamd.conf
    # Add
    :app-name, isequal, &amp;quot;spamd&amp;quot;     -/var/log/spam
    &amp;amp; ~
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5) Restart spamassassin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service spamassassin restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="Install_Courier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Courier&lt;/h1&gt;
&lt;h3&gt;1) Install Courier and saslauthd&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install courier-pop-ssl sasl2-bin
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2) Harden&lt;/h3&gt;
&lt;p&gt;Bind courier to an ipv4 address to disable listening on ipv6&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/courier/pop3d-ssl
    # Modify
    SSLADDRESS=server_ip_here
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2) Enable TLS&lt;/h3&gt;
&lt;p&gt;Generate a csr or self signed keys using &lt;code&gt;openssl&lt;/code&gt; or &lt;code&gt;mkpop3dcert&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /usr/sbin/mkpop3dcert

or

sudo openssl req -x509 -nodes -newkey rsa -keyout my_domain_pop.pem -out my_domain_pop.pem -days 730
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the certificate to courier's config&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/courier/pop3d-ssl
    # Modify
    TLS_CERTFILE=/etc/courier/my_domain_pop.pem
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3) Enable exim and saslauthd integration&lt;/h3&gt;
&lt;p&gt;Add the exim user to the saslauthd group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo usermod -a -G sasl Debian-exim
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4) Restart courier and exim&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service exim4 restart
sudo service courier-pop3d-ssl restart
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Shellinabox Web Shell</title><link href="alexcreek.com/shellinabox-web-shell.html" rel="alternate"></link><updated>2014-10-29T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-29:alexcreek.com/shellinabox-web-shell.html</id><summary type="html">&lt;p&gt;Shellinabox is a browser based, login shell, built using css, html and javascript and it runs entirely over HTTP.  At a high level, shellinabox is very similar to an SSH shell session.  They both utilize the &lt;code&gt;/etc/passwd&lt;/code&gt; user database, they both make use of &lt;code&gt;PAM&lt;/code&gt;, and they both execute &lt;code&gt;/bin/login&lt;/code&gt; to authenticate users.  The primary difference is that shellinabox communicates exclusivly over HTTP and HTTPS, not SSH. &lt;/p&gt;
&lt;p&gt;Basically, &lt;code&gt;shellinabox&lt;/code&gt; is a webserver that allows users to authenticate against a system and then renders the terminal output in html and css.&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;It can be installed from source from &lt;a href="shellinabox.com"&gt;shellinabox.com&lt;/a&gt; or if you're using Ubuntu 14.04, it's available from the &lt;code&gt;Universe&lt;/code&gt; repo. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install shellinabox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's recommended to implement additional layers of security by putting a reverse proxy in front of &lt;code&gt;shellinabox&lt;/code&gt;, encrypting the connection and requiring HTTP authentication.  We'll use &lt;code&gt;apache&lt;/code&gt; for this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install apache2 apache2-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configure&lt;/h2&gt;
&lt;p&gt;We'll enable a couple modules we need&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;a2enmod ssl proxy proxy_http auth_digest
service apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we'll configure the &lt;code&gt;htpasswd&lt;/code&gt; file and create self signed SSL certificates&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p /etc/apache2/auth
htdigest -c /etc/apache2/auth/shell_users &amp;quot;Authorization Required&amp;quot; alex

mkdir -p /etc/apache2/ssl
openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout /etc/apache2/ssl/shell.pem -out /etc/apache2/ssl/shell.pem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we'll install the &lt;code&gt;apache&lt;/code&gt; vhost config and restart &lt;code&gt;apache&lt;/code&gt; to make the changes take effect&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="err"&gt;*:443&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        ErrorLog &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;APACHE_LOG_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/shell-error.log
        CustomLog &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;APACHE_LOG_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/shell-access.log combined

        # Auth
        &lt;span class="nt"&gt;&amp;lt;Location&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                AuthType digest
                AuthName &amp;quot;Authorization Required&amp;quot;
                AuthDigestProvider file
                AuthUserFile /etc/apache2/auth/shell_users
                Require valid-user
                Options -Indexes
        &lt;span class="nt"&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;\.git&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                Order allow,deny
                Deny from all
        &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

        # Reverse Proxy
        ProxyPass        /shellinabox  http://localhost:4200/
        ProxyPassReverse /shellinabox  http://localhost:4200/

        # SSL 
        SSLEngine on
        SSLCertificateFile      /etc/apache2/ssl/shell.pem
        SSLCertificateKeyFile   /etc/apache2/ssl/shell.key
        SSLHonorCipherOrder on
        SSLProtocol all -SSLv2 -SSLv3
        SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;service apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, &lt;code&gt;shellinabox&lt;/code&gt; uses HTTPS.  Because we're putting it behind a proxy and using our own webserver to implement TLS, we'll disable it's built-in encryption as well as force it to listen on the local loopback interface.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/default/shellinabox
# Modify
SHELLINABOX_ARGS=&amp;quot;--no-beep --disable-ssl --localhost-only&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;service shellinabox restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/br&gt;
If everything is working correctly, you should now be able to browse to https://[server_ip]/shellinabox and be greeted with a familar looking prompt, wating for a username and password.&lt;/p&gt;
&lt;p&gt;&lt;img alt="It works" src="images/shell.gif" title="It Works" /&gt;&lt;/p&gt;</summary></entry><entry><title>Manage websites and FTP permissions with Webmin</title><link href="alexcreek.com/manage-websites-and-ftp-permissions-with-webmin.html" rel="alternate"></link><updated>2014-10-28T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-28:alexcreek.com/manage-websites-and-ftp-permissions-with-webmin.html</id><summary type="html">&lt;p&gt;So the question at hand is, how can we setup Webmin to create websites and have an ftp user that can manage the sites with minimal overhead? 
This can be done in 3 steps:&lt;/p&gt;
&lt;h3&gt;1) Create an ftp user, make their home directory the toplevel directory of the default DocumentRoot and add them to the apache group.&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;adduser uploader --home=/var/www --shell=/sbin/nologin --gid=apache&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;2) Change the permissions of DocumentRoot directories that Webmin creates to group writeable&lt;/h3&gt;
&lt;p&gt;This requires modifying Webmin's core files.  Aside from the obvious threat of breaking Webmin, the not so obvious danger is that if Webmin is updated then the modifications may be lost. So it's important to take notes of what's been done. &lt;/p&gt;
&lt;p&gt;The file that controls creating apache virtualhosts is &lt;code&gt;/usr/libexec/webmin/apache/create_virt.cgi&lt;/code&gt;.  There aren't any functions in the file, so we're looking for a comment to locate what we need, &lt;code&gt;# Check if the root directory is allowed&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Check if the root directory is allowed&lt;/span&gt;
&lt;span class="x"&gt;!&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;} || &amp;amp;allowed_auth_file(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}) ||&lt;/span&gt;
&lt;span class="x"&gt;        &amp;amp;error(&amp;amp;text(&amp;#39;cvirt_eroot3&amp;#39;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}));&lt;/span&gt;

&lt;span class="x"&gt;if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;} &amp;amp;&amp;amp; !-d &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; create the document root&lt;/span&gt;
&lt;span class="x"&gt;        mkdir(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, 0755) ||&lt;/span&gt;
&lt;span class="x"&gt;                &amp;amp;error(&amp;amp;text(&amp;#39;cvirt_eroot2&amp;#39;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;!));&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;User&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;Group&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="x"&gt; = &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt; ? getpwnam(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt;) : 0;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="x"&gt; = &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="x"&gt; ? getgrnam(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="x"&gt;) : 0;&lt;/span&gt;
&lt;span class="x"&gt;        chown(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="x"&gt;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="x"&gt;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;});&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To modify the DocumentRoot's, permissions add a call to chmod after the directory has been created.&lt;/p&gt;
&lt;p&gt;Original:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;} &amp;amp;&amp;amp; !-d &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; create the document root&lt;/span&gt;
&lt;span class="x"&gt;        mkdir(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, 0755) ||&lt;/span&gt;
&lt;span class="x"&gt;                &amp;amp;error(&amp;amp;text(&amp;#39;cvirt_eroot2&amp;#39;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;!));&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;User&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;Group&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modified:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;} &amp;amp;&amp;amp; !-d &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; create the document root&lt;/span&gt;
&lt;span class="x"&gt;        mkdir(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, 0755) ||&lt;/span&gt;
&lt;span class="x"&gt;                &amp;amp;error(&amp;amp;text(&amp;#39;cvirt_eroot2&amp;#39;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;}, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;!));&lt;/span&gt;
&lt;span class="x"&gt;        chmod 0775, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;root&amp;#39;};&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;User&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="x"&gt; = &amp;amp;find_directive(&amp;quot;Group&amp;quot;, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;conf&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3) The final step is to change the umask settings for the FTP server.  This will control the permissions of all newly created files and directories&lt;/h3&gt;
&lt;h4&gt;vsftpd&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/vsftpd/vsftpd.conf
local_umask=002
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;ProFTPD&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/proftpd.conf
Umask                           002
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4) Restart services&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service proftpd restart
service webmin restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;These settings will allow a website to be bootstrapped using Webmin and FTP uploads, however it should be noted that having a site's DocumentRoot writable by the webserver process is considered a security vulnerability and should be evaluated for it's actual usefulness. &lt;/p&gt;</summary></entry><entry><title>Add an SSL Cert to Zpanel</title><link href="alexcreek.com/add-an-ssl-cert-to-zpanel.html" rel="alternate"></link><updated>2014-10-25T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-25:alexcreek.com/add-an-ssl-cert-to-zpanel.html</id><summary type="html">&lt;p&gt;Zpanel keeps it's control panel and client configurations in the same file &lt;code&gt;/etc/zpanel/configs/apache/httpd-vhosts.conf&lt;/code&gt;.  When changes are made to any of the panel's domains, this file is automatically updated.  This overwrites any changes to the panel's vhost config as well. &lt;/p&gt;
&lt;p&gt;To avoid having your SSL vhost config continuously overwritten, you must put it in a separate file and have it sourced by adding an &lt;code&gt;Include&lt;/code&gt; directive into the primary apache config file &lt;code&gt;/etc/zpanel/configs/apache/httpd.conf&lt;/code&gt;&lt;/p&gt;
&lt;script src="https://gist.github.com/alexcreek/bdfc9da3e405ff4ecab6.js"&gt;&lt;/script&gt;

&lt;p&gt;As an added bonus, adding encryption to the control panel will in turn encrypt the webmail, phpmyadmin and any other pages accessible from the panel.&lt;/p&gt;</summary></entry><entry><title>Git Cheatsheet</title><link href="alexcreek.com/git-cheatsheet.html" rel="alternate"></link><updated>2014-10-25T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-25:alexcreek.com/git-cheatsheet.html</id><summary type="html">&lt;h2&gt;How to commit properly&lt;/h2&gt;
&lt;p&gt;Commit all files in the working tree that have been modified&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git commit -am &amp;#39;commit message&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Commit a file individually&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git commit -m &amp;#39;commit message&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How not to commit&lt;/h2&gt;
&lt;p&gt;Only commit changes staged in the index, not all modified files&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git commit -m &amp;#39;commit message&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Remove recently added files and unstage modifications&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git reset HEAD
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Revert modified files&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout -- [filename]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Remove files from tracking&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git rm --cached [filename]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Delete last commit (STAGED FILES WILL BE LOST)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git reset --hard HEAD~1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;List tracked files&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git ls-files --full-name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;List branches&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git branch
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Push local branch to remote repo&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push origin local-branch
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Delete remote branch&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push origin :branch-name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Useful log formats&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git log --oneline | --stat | --numstat
git show [commit]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Git history&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git reflog
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Prevent files from being added into git&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi $PROJECT_ROOT/.gitignore
    # add
    file_to_ignore
    directory_to_ignore
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Referring to previous commits&lt;/h2&gt;
&lt;p&gt;^ and ~ both refer to previous commits. However appending numbers doesn't always work as expected.  Use ~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HEAD^  == HEAD~&lt;/li&gt;
&lt;li&gt;HEAD^1 == HEAD~1&lt;/li&gt;
&lt;li&gt;HEAD^^ == HEAD~~&lt;/li&gt;
&lt;li&gt;HEAD^2 != HEAD~2 || HEAD^^&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Backing Up With Rsync and Tar</title><link href="alexcreek.com/backing-up-with-rsync-and-tar.html" rel="alternate"></link><updated>2014-10-24T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-24:alexcreek.com/backing-up-with-rsync-and-tar.html</id><summary type="html">&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt; is used to copy files and &lt;code&gt;tar&lt;/code&gt; is used for compression&lt;/p&gt;
&lt;script src="https://gist.github.com/alexcreek/907ce5553ee5b4078f74.js"&gt;&lt;/script&gt;</summary></entry><entry><title>Send HTML email from the command line</title><link href="alexcreek.com/send-html-email-from-the-command-line.html" rel="alternate"></link><updated>2014-10-24T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-24:alexcreek.com/send-html-email-from-the-command-line.html</id><summary type="html">&lt;p&gt;Sometimes there's nothing better than receiving an email from some long forgotten cronjob and having it formatted in nice readable HTML.  Well it's alot tougher than it should be to make that happen.  &lt;/p&gt;
&lt;p&gt;The only way I've found to accomplish this is to inject 'Content-Type' headers into the email when it's being sent.  And conviently, not all mail clients do this the same way. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;mailx&lt;/code&gt; from &lt;code&gt;bsd-mailx&lt;/code&gt; provides the most consistent way of adding arbitrary email headers to outgoing mail.  You just have to be sure it's the only client installed.&lt;/p&gt;
&lt;h2&gt;Install the goods:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get purge heirloom-mailx
sudo apt-get install bsd-mailx
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;To craft the email:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mailx -a &amp;#39;Content-Type: text/html; charset=&amp;quot;utf-8&amp;quot;&amp;#39; -a &amp;#39;From: sender@address&amp;#39; -s &amp;#39;Subject&amp;#39; &amp;#39;recipient@address&amp;#39; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Now put it to work:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python ~/generate-report.py &amp;amp;&amp;amp; cat /tmp/report.html | mailx -a &amp;#39;Content-Type: text/html; charset=&amp;quot;utf-8&amp;quot;&amp;#39; -a &amp;#39;From: sender@address&amp;#39; -s &amp;#39;Subject&amp;#39; &amp;#39;recipient@address&amp;#39;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Creating certificates with openssl</title><link href="alexcreek.com/creating-certificates-with-openssl.html" rel="alternate"></link><updated>2014-10-21T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-21:alexcreek.com/creating-certificates-with-openssl.html</id><summary type="html">&lt;h2&gt;Self Signed Cert&lt;/h2&gt;
&lt;p&gt;Create a single .pem file containing both the private (key) and public (cert) keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout site.pem -out site.pem
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;CSR&lt;/h2&gt;
&lt;p&gt;Create an certificate signing request&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;openssl req -new -newkey rsa:2048 -nodes -keyout site.key -out site.csr
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Setup logstash (ELK stack)</title><link href="alexcreek.com/setup-logstash-elk-stack.html" rel="alternate"></link><updated>2014-10-17T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-17:alexcreek.com/setup-logstash-elk-stack.html</id><summary type="html">&lt;p&gt;Logstash is a log processing supertool written in ruby and packaged using the java implementation of ruby, jruby. In other words, it's a ruby app that runs on java.  Logstash accepts just about any type of data you can throw at it (apache logs file, syslog data, Windows logs, random data from the 80's), parses it and creates meaningful, structured, searchable information out of it. &lt;/p&gt;
&lt;p&gt;Elasticsearch is a high performance database that utilizes the search engine library, Apache Lucene. &lt;/p&gt;
&lt;p&gt;Kibana is a powerful browser-based dashboard built with HTML and Javascript that is the primary interface to the mounds of data stored in Elasticsearch. &lt;/p&gt;
&lt;p&gt;Together these create the ELK stack. Logstash munges the data, elasticsearch sifts through the data and kibana presents the data. &lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;Check &lt;a href="http://www.elasticsearch.org/overview/elkdownloads/"&gt;here&lt;/a&gt; for the latest builds &lt;/p&gt;
&lt;p&gt;1) Install java&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install openjdk-7-jre-headless
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2) Download and install logstash and elasticsearch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.deb
wget https://download.elasticsearch.org/logstash/logstash/packages/debian/logstash_1.4.2-1-2c0f5a1_all.deb
wget https://download.elasticsearch.org/logstash/logstash/packages/debian/logstash-contrib_1.4.2-1-efd53ef_all.deb
dpkg -i elasticsearch-1.3.4.deb
dpkg -i logstash_1.4.2-1-2c0f5a1_all.deb
dpkg -i logstash-contrib_1.4.2-1-efd53ef_all.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Optionally, you can follow &lt;a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-repositories.html#_apt"&gt;these&lt;/a&gt; steps to add the repos to your system and install using your package manager. [HINT: This makes upgrading easier]&lt;/p&gt;
&lt;p&gt;3) Configure &lt;/p&gt;
&lt;p&gt;3) Install kibana&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz
tar -xzvf kibana-3.1.1.tar.gz

sudo vi ~/kibana-3.0.1/config.js
elasticsearch: &amp;quot;http://&amp;quot;+window.location.hostname+&amp;quot;:80&amp;quot;,


sudo mkdir -p /var/www/kibana3

sudo cp -R ~/kibana-3.0.1/* /var/www/kibana3/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4) Install nginx&lt;/p&gt;
&lt;p&gt;Download the modifed nginx config from here&lt;/p&gt;</summary></entry><entry><title>Get HTTP Headers Using PHP</title><link href="alexcreek.com/get-http-headers-using-php.html" rel="alternate"></link><updated>2014-10-03T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-03:alexcreek.com/get-http-headers-using-php.html</id><summary type="html">&lt;p&gt;The &lt;code&gt;getenv()&lt;/code&gt; function is used to parse enviroment variables created by the webserver executing the php code, including HTTP Headers.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$client_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REMOTE_ADDR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$user_agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Client IP: &lt;/span&gt;&lt;span class="si"&gt;$client_ip&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;User Agent: &lt;/span&gt;&lt;span class="si"&gt;$user_agent&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using conditional statements, the headers can be parsed and then actions taken based upon their contents.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$ua&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ua&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Wget&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;http_response_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Don&amp;#39;t wget me&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;apache_request_headers()&lt;/code&gt; returns an associative array containing all the headers passed to the server in a request.  This provides access to headers outside of what apache exposes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;apache_request_headers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;x-forwarded-for&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;http_response_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No proxies jackhole&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see the values of all of apache's environment variables as well as all request headers, upload &lt;a href="https://gist.github.com/alexcreek/8fd436c6f7f9b5b58ae0"&gt;this&lt;/a&gt; script to your apache instance&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://httpd.apache.org/docs/current/expr.html#vars"&gt;Apache Environment Variables&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Apache add www to domain</title><link href="alexcreek.com/apache-add-www-to-domain.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/apache-add-www-to-domain.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;RewriteEngine on
RewriteCond %{HTTP_HOST} ^domain.com$ [NC]
RewriteRule (.*) http://www.domain.com$1 [R=301,L]
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;RewriteEngine on
RewriteCond %{HTTP_HOST} ^domain.com$ [NC]
RewriteRule ^(.*)$ http://www.%{HTTP_HOST}/$1 [R=301,L]
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Bash Oneliners</title><link href="alexcreek.com/bash-oneliners.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/bash-oneliners.html</id><summary type="html">&lt;h2&gt;Infinite while loops&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;It Never Ends&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The key is the placement of the semicolons. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;x++&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; $x &lt;span class="sb"&gt;`&lt;/span&gt;date +%T&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Can you feel it?&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mail -s &lt;span class="s1"&gt;&amp;#39;SMTP Test&amp;#39;&lt;/span&gt; admin@theHeazy.com&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Configure Linux as a Router</title><link href="alexcreek.com/configure-linux-as-a-router.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/configure-linux-as-a-router.html</id><summary type="html">&lt;p&gt;This guide is for a dual NIC machine.  The machine will use iptable's NAT feature to act as a router/gateway.  This guide does not require editing of the system's routing table.&lt;/p&gt;
&lt;p&gt;1) Enable routing in the kernel&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/sysctl.conf
net.ipv4.ip_forward &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="c1"&gt;# Uncomment this line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enable the changes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo sysctl -p
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2)  Configure iptables to route packets. Verify that you're configuring the correct interfaces for in/out&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo iptables -t nat -A POSTROUTING --out-interface eth1 -j MASQUERADE
sudo iptables -A FORWARD --in-interface eth0 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3)  Write the iptables ruleset to a firewall script or file via iptables-save&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo iptables-save &amp;gt; /etc/firewall.rules
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4)  Configure the ruleset to load at boot time&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/rc.local
iptables-restore &amp;lt; /etc/firewall.rules  &lt;span class="c1"&gt;# Insert above &amp;#39;exit 0&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5)  Reboot and verify&lt;/p&gt;</summary></entry><entry><title>Fix Locale Errors</title><link href="alexcreek.com/fix-locale-errors.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/fix-locale-errors.html</id><summary type="html">&lt;p&gt;In an effort to minimize a system's footprint, providers will sometimes rip out the language files.  This will cause irritating locale errors such as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;perl: warning: Setting locale failed. 
perl: warning: Please check that your locale settings:
LANGUAGE = &amp;quot;&amp;quot;,
LC_ALL = (unset),
LANG = &amp;quot;&amp;quot;,
are supported and installed on your system. 
perl: warning: Falling back to the standard locale (&amp;quot;C&amp;quot;). 
locale: Cannot set LC_CTYPE to default locale: No such file or directory
locale: Cannot set LC_MESSAGES to default locale: No such file or directory
locale: Cannot set LC_ALL to default locale: No such file or directory
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's the fix: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo locale-gen en_US en_US.UTF-8
dpkg-reconfigure locales 
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Nagios Tutorial</title><link href="alexcreek.com/nagios-tutorial.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/nagios-tutorial.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;"Nagios is an open source computer system monitoring, network monitoring and infrastructure monitoring software application. Nagios offers monitoring and alerting services for servers, switches, applications, and services. It alerts the users when things go wrong and alerts them when the problem has been resolved." -- wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nagios is relatively easy to configure, given a proper understanding of the configuration system.  Nagios gets it's config by reading a series of .cfg files.  Settings are not restricted to a specific config files.  During runtime all of the files are combined and read together.  This can lead to confusion if a stray definition is located in a file that an admin forgot about.  This also means that you can have as many or as few config files as you want.   &lt;/p&gt;
&lt;p&gt;Nagios utilizes an inheritance system for assigning object's properties.  The inheritance is comprised of a hierarchy of templates, hostgroups and servicegroups.  The inheritance is similar to instances and classes in object oriented programming. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host Creation
Template --- templates.cfg
       Host --- hostname.cfg

Service Assignment &amp;amp; Logical Grouping
Hostgroup --- hostgroup-name.cfg
Services
        Host --- hostgroup-name.cfg or hostname.cfg

Servicegroup --- servicegroup-name.cfg
Services                              
        Host --- hostgroup-name.cfg or hostname.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above diagram shows how hosts are created by referencing a host template in the templates.cfg file.  The diagram also shows how hostgroups and servicegroups are assigned services and then hosts are assigned to the respective groups.  Every host in a host/service group will inherit all of the services assigned to the group.  This saves the administrator from creating the same service definition in multiple host configuration files.  However, custom services should still be configured in the host file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;objects/servers/01-mail.cfg
define host{
        use                         linux-box
        host_name                   mail.example.com
        alias                       Email Server
        address                     xxx.xxx.xxx.xxx
        hostgroups                  mail.servers
        }

objects/templates.cfg
define host{
        name                        linux-box             
        use                         generic-host 
        check_period                24x7         
        check_interval              5            
        retry_interval              1                     
        max_check_attempts          2   
        check_command               check-host-alive 
        notification_period         24x7         
        notification_interval       20       
        notification_options        w,d,u,r       
        contact_groups              admins       
        register                    0     ;defines this as a template
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above example the use directive calls the linux-box template.  Nagios' inheritance system now gives mail.example.com all of the properties defined in the linux-box template.  You can see that the linux-box template uses the generic-host template to apply settings as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;objects/servers/web-servers.cfg
define service{
        use                         generic-service
        hostgroup_name              web.servers
        service_description         HTTP
        check_command               check_http
        }  

objects/templates.cfg
define service{
        name                        generic-service         
        use                         local-service      
        max_check_attempts          2                     
        normal_check_interval       5                      
        retry_check_interval        1                     
        register                    0            
        }      
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This example show a service definition from the hostgroup config, web-servers.cfg.  This service uses the generic-service template which uses the local-service template which are both located in templates.cfg.  Every member of the web-servers.cfg hostgroup will now have the HTTP service associated with it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;objects/servers/web-servers.cfg
define hostgroup{
        hostgroup_name              web.servers
        alias                       Web Servers            
        members                     web.example.com
        }

objects/servers/02-web.cfg
define host{
        use                         linux-box
        host_name                   web.example.com
        alias                       Webserver
        address                     xxx.xxx.xxx.xxx
        hostgroups                  web.servers
        }

Objects/servers/all.cfg
define hostgroup{
        hostgroup_name              all
        alias                       All
        members                     *
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hostgroup membership is defined by the member directive in the hostgroup config.  Hostgroup membership can also be configured by using the hostgroups directive in the host config file .  The first method makes management much easier due to only having to edit a single file to change hostgroup membership.  To create a group that contains every host, instead of entering the name of each hosts enter a * wildcard.  Nagios interprets the wildcard to mean all hosts.  This is best used to assign a base set of services to every host.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;define service{
        use                         generic-service       
        hostgroup_name              all
        }

service_description                 SSH
        check_command               check_ssh!22
        }

define command{
        command_name                check_ssh
        command_line                $USER1$/check_ssh -p $ARG1$ $HOSTADDRESS$
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Services ultimately rely on external commands that Nagios executes.   A service defines the command Nagios uses with the check_command directive.  The value of check_command must match a command definition that has been defined in commands.cfg .  Command definitions are used to create a name for Nagios to use for the command as well as a template for what options will be used with the command.  Understanding how to use a command is best accomplished by executing the actual script or executable found in nagios/libexec.  That will allow the admin to learn what switches and arguments will be best used for their specific requirement.  Once a suitable usage of the command has been identified and a command definition has been created arguments for the command are configured in the service definition by preceding the value with an exclamation point. &lt;/p&gt;
&lt;p&gt;Out of the box, Nagios is a powerful monitoring solution.  However it's true power lies in being able to understand it and configure it to suite the needs of a specific environment.  &lt;/p&gt;</summary></entry><entry><title>Ncat Cheatsheet</title><link href="alexcreek.com/ncat-cheatsheet.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/ncat-cheatsheet.html</id><summary type="html">&lt;p&gt;Ncat is a modernized implementation of the classic Netcat (nc) networking tool. The current version of nc, which is 1.10, was initially released in 1996 by "The Hobbit". A lot's changed since '96. Thankfully, the wonderful people at The Nmap Project decided that to solve modern problems you need modern tools, and thus Ncat was created. Ncat picks up where nc left off by implementing features such as IPv6 compatibility, multi-protocol support, built in access control, SSL integration, SOCKS and HTTP proxy support, and even connection brokering for sharing connections between concurrent clients. There is a variety of Netcats that have popped up over time. They include netcat-openbsd, netcat6, socat, and cryptcat, to name a few. Of the various Netcats that exist, I find The Nmap Project's Ncat to be the most comprehensive and the best implementation of the classic TCP/IP Swiss Army Knife.&lt;/p&gt;
&lt;p&gt;Ncat is typically distributed as part of the Nmap Security Scanner. Nmap packages are readily available for most major Linux distros through their respective package managers. However, the recommended method to install Nmap is to visit the Download page at nmap.org and pickup the current version. Nmap's download page offers precompiled rpms, source rpms, Windows installers, separate binaries for nmap, ncat and nping, and of course source code. Note: If nmap/ncat is installed from source, libssl-dev needs to be installed prior to compiling to enable ssl support.&lt;/p&gt;
&lt;p&gt;Netcat's usage has been covered previously, see Netcat tricks, so the following is going to build on that and detail Ncat's additional features. Care has been taken in developing Ncat to keep the options and basic usage the same as nc. A few minor differences between versions exist, the main being the Ncat doesn't include a port scanning function. This is merely trivial as Nmap is able to fulfill any port scanning requirements.&lt;/p&gt;
&lt;h2&gt;Send/recieve a file&lt;/h2&gt;
&lt;p&gt;Server side &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -vl --send-only 7777 &amp;lt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -v remote_host 7777 &amp;gt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Encrypt a session with SSL&lt;/h2&gt;
&lt;p&gt;Server side &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -vl --ssl 7777 &amp;lt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -v --ssl 7777 &amp;gt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Connect to an HTTPS website&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -v --ssl google.com 443
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Forward a local port&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -vl &lt;span class="m"&gt;7777&lt;/span&gt; -c &lt;span class="s1"&gt;&amp;#39;ncat remote_host 8080&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Connect through a proxy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat --proxy proxy_server:port --proxy-type {socks4|http} remot_host port [--proxy-auth username:password]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Proxies that return status code 407 require authentication&lt;/p&gt;
&lt;h2&gt;Create an HTTP proxy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -vl --proxy-type http 7777 [--allow 123.45.67.89 --proxy-auth user:pass]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configure access controls for listening sockets&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ncat -vl 7777 {--allow|--deny}  remotehost
ncat -vl 7777 {--allow|--deny}  10.0.0.10
ncat -vl 7777 {--allow|--deny}  10.0.0.10,10.0.0.20
ncat -vl 7777 {--allow|--deny}  10.0.0.10-20
ncat -vl 7777 {--allow|--deny}  10.0.0.0/24
ncat -vl 7777 {--allow-file|--deny-file} hosts.txt
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Netcat Cheatsheet</title><link href="alexcreek.com/netcat-cheatsheet.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/netcat-cheatsheet.html</id><summary type="html">&lt;h2&gt;Open a socket&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vlp port
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Send file to client&lt;/h2&gt;
&lt;p&gt;Server side, opens a socket and closes it once file is transferred&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vlp port -q 0 &amp;lt; file.send
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -v server port &amp;gt; file.receive
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Send file to server&lt;/h2&gt;
&lt;p&gt;Server side, opens a socket and waits to receive a file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vlp port &amp;gt; file.recieve
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side, sends file to server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vq 0 server port &amp;lt; file.send
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Monitor file transfer speeds using pv&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pv&lt;/code&gt; does not need to be used by both client &amp;amp; server, this is for demonstration purposes only&lt;/p&gt;
&lt;p&gt;Server side, pipe input through pv to monitor transfer speeds&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat file.send | pv | nc -vlp port
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side, pipe ouput through pv to monitor transfer speeds&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -v server port | pv | cat &amp;gt; file.recieve
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Remote shell&lt;/h2&gt;
&lt;p&gt;Server side&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vlp port -e /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -v server port
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Reverse shell&lt;/h2&gt;
&lt;p&gt;Listener&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vlp port
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client side&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -v listener port -e /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Port scan&lt;/h2&gt;
&lt;p&gt;Scans ports 20-30 with -vv for verbose output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nc -vv -z hostname 20-30
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Grab banner from server&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo &amp;quot;&amp;quot; | nc -vw 1 hostname 22
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Port Forwarding with iptables</title><link href="alexcreek.com/port-forwarding-with-iptables.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/port-forwarding-with-iptables.html</id><summary type="html">&lt;p&gt;Configuring a port forward with iptables takes 2 rules, a PREROUTING rule and a FORWARD rule. The heavy lifting is accomplished by the PREROUTING rule on the nat table. The FORWARD rule simply allows traffic across the FORWARD chain on the filter table.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iptables -A PREROUTING -t nat -i [external_iface] -p [proto] --dport [external_port] -j DNAT --to [internal_ip]:[internal_port]
iptables -A FORWARD -p [proto] -d [internal_ip] --dport [internal_port] -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The FORWARD rule isn't necessarily necessary, but if the default policy for the FORWARD chain on the filter table is DROP, then the port forward won't work without the second rule.&lt;/p&gt;</summary></entry><entry><title>Sed Tutorial</title><link href="alexcreek.com/sed-tutorial.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/sed-tutorial.html</id><summary type="html">&lt;p&gt;Sed's primary function is to search for and replace text; we call this process "substitution".  Additionally, sed can easily append, insert and delete text.  The syntax can be somewhat intimidating to the new user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed &amp;#39;command/pattern/replacement/flags&amp;#39; file.txt
sed &amp;#39;\pattern\|line_number command/input_text/&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command field tells sed what to do when a match is found; the pattern field is the search string; the replacement field should be obvious and the flag defines various options such as how many times to act on a search hit.  The tricky part lies in the fact that sed has multiple syntaxes.  When performing operations on entire lines the command field is prefixed with the target line number(s) and the pattern field is not used. &lt;/p&gt;
&lt;h2&gt;Typical Use&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;s/herf/href/g&amp;#39; /var/www/index.html 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The example replaces all instances of herf with href, pretty slick huh?  Let's take a look at some of the other things Sed can do.&lt;/p&gt;
&lt;h2&gt;Substitution&lt;/h2&gt;
&lt;p&gt;We just saw this in the last example. Here we replace all instances of foo with bar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;s/foo/bar/g&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Deletion&lt;/h2&gt;
&lt;p&gt;Sed can also delete specific lines of text. The following removes line 10 from file.txt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;10d&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Range Deletion&lt;/h2&gt;
&lt;p&gt;A range of lines can be deleted at once using D. The example deletes line 95-10.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;95,100D&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Append&lt;/h2&gt;
&lt;p&gt;Strings can be appended after a specific line. This example appends Bazinga to a new line after line 20&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;20a\Bazinga\&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Insertion&lt;/h2&gt;
&lt;p&gt;Sed can insert text before specifed lines as well. Here we insert Incoming into line 20 thus moving line 20's contents to line 21&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;20i\Incoming\&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Replacement&lt;/h2&gt;
&lt;p&gt;Sed can also performs replacement of entire lines. Using the c command replaces the entire line with the specified string.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;10c\Presto\&amp;#39; file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Pattern Match Deletion&lt;/h2&gt;
&lt;p&gt;Another deletion feature of Sed's is deleting lines that matches a pattern. The example deletes every line that contains the string false&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;/false/d&amp;#39;  file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h1&gt;Advanced Sed&lt;/h1&gt;
&lt;h2&gt;Sed's additional syntax (insert, append, delete, and replace):&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed /pattern/|line number i\ a\ d\ c\input_text\ filename
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Find a string and delete the line it's in&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;/error/d/&amp;#39; /var/log/tunnel.log
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;/d deletes a line that matches the pattern, it's part of sed's bizarre syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Find a string and insert stuff into the line before it&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;#39;/^exit/ i\iptables-restore &amp;lt; /etc/firewall.rules\&amp;#39; /etc/rc.local
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The additional syntax accepts line numbers and ranges, but matching regexes is much cleaner&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Find a string and replace the entire line&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &amp;quot;s/^dc_relay_net.*$/dc_relay_net=&amp;#39;$IP&amp;#39;/&amp;quot; /etc/exim4/update-exim4.conf.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;-i actions are performed inline, directly within the file specified&lt;/li&gt;
&lt;li&gt;" " are used so $IP will expand AND it's contents will be surrounded by ' ' when finished&lt;/li&gt;
&lt;li&gt;The entire line gets replaced because of creative use of regex matching&lt;/li&gt;
&lt;li&gt;^ matches the beginning of a line, .* matches everything, $ matches the end of a line, duh&lt;/li&gt;
&lt;li&gt;sed -i "/dc_relay_net/ c\dc_relay_net='$IP'/" would work except the " "s mess up the command and they're needed due to using $IP&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>SSH Cheatsheet</title><link href="alexcreek.com/ssh-cheatsheet.html" rel="alternate"></link><updated>2014-10-02T00:00:00-04:00</updated><author><name>alex</name></author><id>tag:,2014-10-02:alexcreek.com/ssh-cheatsheet.html</id><summary type="html">&lt;h2&gt;Forward a local port through an intermediary host to a remote host&lt;/h2&gt;
&lt;p&gt;Opens a shell on intermediary host and forwards a port to remote host through SSH's secure channel.  The forwarded port is accessible  on the local machine via localhost:port&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -L localport:remotehost:remoteport user@intermediary_host
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Execute a single command through an intermediary host onto a remote host&lt;/h2&gt;
&lt;p&gt;Netcat-like, doesn't open a shell on intermediary host.  Must use IP or FQDN for remote host&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -W remote_host:port user@intermediary_host
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Forward a local port to a remote host, accessible on local host&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -L localport:remotehost:remoteport user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the &lt;code&gt;-g&lt;/code&gt; flag to make the local port acessible to other systems on the local LAN&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -g -L localport:remotehost:remoteport user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Forward a local port to a remote host, accessible on remote host; aka reverse shell&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -R remoteport:localhost:localport user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Forward an internal port to a remote host, accessible on remote host&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -R remoteport:host_on_internal_LAN:internalport user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Dynamic forward; aka SOCKS proxy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -D port user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use the &lt;code&gt;-N&lt;/code&gt; flag to prevent opening a shell upon SSH connection&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -N -D port user@remotehost   
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Public SOCKS proxy&lt;/h2&gt;
&lt;p&gt;Again, use the &lt;code&gt;-g&lt;/code&gt; flag to make the port (SOCKS proxy) accessible to other systems on the LAN (DANGEROUS)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -g -D port user@remotehost
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Chain ssh sessions&lt;/h2&gt;
&lt;p&gt;Use the &lt;code&gt;-a&lt;/code&gt; flag to disable agent forwarding then the &lt;code&gt;-t&lt;/code&gt; flag to force a psuedo-tty&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -a -t user@host_1 &lt;span class="s1"&gt;&amp;#39;ssh user@host_2&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Tunnel an ssh connection through an HTTP proxy&lt;/h2&gt;
&lt;p&gt;Using &lt;code&gt;proxy-connect&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -o &lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;connect -H proxyserver:proxyport sshserver sshport&amp;#39;&lt;/span&gt; user@sshserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;corkscrew&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -o &lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;corkscrew proxyserver proxyport sshserver sshport&amp;#39;&lt;/span&gt; user@sshserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Send a file using SSH&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat file.send &lt;span class="p"&gt;|&lt;/span&gt; ssh user@remoteserver &lt;span class="s1"&gt;&amp;#39;cat &amp;gt; file.recieve&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry></feed>
